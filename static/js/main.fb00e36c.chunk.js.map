{"version":3,"sources":["utils/request.js","components/route/PrivateRoute.js","components/route/UnauthenticatedRoute.js","components/Home.js","components/Private.js","components/NavBar.js","utils/hooks.js","components/Message.js","components/ExecutionStatus.js","components/Utilization.js","components/StateBar.js","components/dataToPoints.js","components/ExecutionTimeline.js","components/List.js","components/Machines.js","client.js","components/Console.js","components/Loading.js","components/Diagnostics/DiagnosticsList.js","components/MachineDropdown.js","components/Diagnostics/index.js","components/Diagnostics/DiagnosticsGraph.js","components/Logo.js","components/auth/Login.js","components/auth/Authorized.js","components/auth/Authorize.js","components/Production/DataMap.js","components/Production/ProductionAggregate.js","components/Production/ProductionGraph.js","components/Production/index.js","components/NotFound.js","components/Downtime/index.js","components/Machine/PartCount.js","components/Machine/ExecutionBar.js","components/Machine/ProgramTable.js","components/Machine/Machine.js","App.js","index.js","../node_modules/graphql-language-service-utils/esm sync /^.*/.js$","../node_modules/graphql-language-service-utils/esm sync /^.*/.json$","../node_modules/graphql-language-service-utils/esm lazy /^.*/.js$/ groupOptions: {} namespace object","../node_modules/graphql-language-service-utils/esm lazy /^.*/.json$/ groupOptions: {} namespace object"],"names":["JWT","jwtIntervalHandle","getAccessToken","window","localStorage","getItem","removeAccessToken","removeItem","getJwt","a","clearInterval","setInterval","refreshJwt","request","process","response","removeJwt","undefined","url","options","headers","Authorization","rawRequest","fetch","text","obj","JSON","parse","status","location","error","Error","statusText","json","PrivateRoute","component","props","to","UnauthenticatedRoute","Panel","styled","div","Home","Private","children","useLocation","useState","hasAccessToken","setHasAccessToken","useEffect","accessToken","Header","StyledNavLink","NavLink","StyledNavText","LeftNav","RightNav","NavBar","query","gql","data","useQuery","exact","Company","name","onClick","useAsyncEffect","delegate","stateTriggers","destroy","controller","AbortController","signal","asyncEffect","abort","useAsyncInterval","delay","savedCallback","useRef","current","abortSignal","tick","id","setTimeout","clearTimeout","useProductionQuery","setData","loading","setLoading","setError","method","body","result","useDebounceState","defaultValue","value","setValue","_","debounce","Message","Pill","ActivePill","IdlePill","ExecutionStatus","machineRef","useSubscription","variables","skip","currentExecution","length","message","DivContainer","DivLeft","DivRight","Utilization","period","machineId","type","start","moment","utc","startOf","subtract","format","end","endOf","sparkData","setSparkData","rateData","items","map","item","utilizationRate","diff","first","last","leadingZeroCount","trailingZeroCount","leadingZeros","times","trailingZeros","getFill","SparkSettings","SparklinesBars","SparklinesLine","aggregate","max","min","style","fill","Math","round","StateBar","this","width","height","svgWidth","svgHeight","preserveAspectRatio","margin","onMouseMove","points","apply","d","x","arrayMax","arrayMin","vheight","hfactor","color","filter","dataToPoints","svgOpts","viewBox","fillStyle","stroke","strokeWidth","fillOpacity","pointerEvents","tooltips","p","i","key","cx","cy","r","onMouseEnter","e","transform","y","bind","PureComponent","defaultProps","colorMapping","ACTIVE","READY","UNAVAILABLE","INTERRUPTED","STOPPED","PROGRAM_STOPPED","tz","setDefault","computeTimeWindow","hours","ExecutionTimeline","timeWindow","setTimeWindow","executionIntervals","interval","event","isBefore","TableStyle","List","qty","machineMake","machineModel","serialNumber","useMachinesQuery","wsLink","WebSocketLink","uri","lazy","reconnect","connectionParams","jwt","errorLink","onError","operation","networkError","graphQLErrors","forward","getMainDefinition","subscriptionClient","close","forEach","err","extensions","code","httpLink","setContext","concat","createHttpLink","splitLink","split","definition","kind","link","ApolloLink","from","client","ApolloClient","cache","InMemoryCache","fetcher","execute","Console","graphiql","explorerIsOpen","setExplorerIsOpen","schema","setSchema","setQuery","introspectSchema","graphqlSchema","editor","getQueryEditor","setOption","extraKeys","fetchSchema","className","onEdit","onRunOperation","handleRunQuery","onToggleExplorer","ref","onEditQuery","Toolbar","Button","label","title","handleCopyQuery","handlePrettifyQuery","handleToggleHistory","Loading","Item","DiagnosticsList","eventTime","MachineDropdown","setMachineRef","onChange","target","Machine","Diagnostics","filterKey","setFilterKey","currentQuantities","currentTimeWindow","DiagnosticsGraph","useParams","bucket","setBucket","toISOString","source","aggregatedQuantities","valueOf","avg","callback","active","setActive","useInterval","isActive","setIsActive","option","animation","tooltip","xAxis","yAxis","series","step","symbolSize","lineStyle","datasetIndex","dataset","dataZoom","filterMode","onMouseLeave","Logo","version","fillRule","params","authState","uuidv4","loginParams","response_type","state","scope","ttl","client_id","redirect_uri","_map","v","k","join","loginUrl","Centered","LoginButton","LogoContainer","Login","loadError","href","Done","pathname","Authorize","setLoadError","qs","search","grant_type","client_secret","URLSearchParams","access_token","setItem","console","log","Authorized","DataMap","rate","toFixed","unit","totalParts","rejectedParts","oee","availability","timeInCut","ms","downtimeMs","getInfo","info","val","Row","Cell","Title","h1","Body","ProductionAggregate","ProductionGraph","metric","graphType","day","axisLabel","rotate","Footer","Production","NotFound","Downtime","useDowntimeQuery","filteredData","setFilteredData","reasons","setReasons","selectedReason","setSelectedReason","isEmpty","uniq","days","groupBy","mapValues","rows","modifiedReasons","row","reason","sumBy","values","PartCount","partMetric","medianCycle","setMedianCycle","counts","newArr","push","sort","b","half","floor","median","duration","minutes","seconds","ExecutionBar","setPoints","utilization","setUtilization","totalInCycle","pts","stateIntervals","newStart","newEnd","cycleTime","programKey","startDate","endDate","mergeRuns","showHeader","partRegEx","queryGetPartMetric","dataPartMetric","setPartMetric","Metric","rxProgram","newData","part","match","program","mergedData","humanize","machineQuery","loadingMachine","errorMachine","dataMachine","setProgramKey","toDate","setStartDate","setEndDate","setMergeRuns","setShowHeader","setPartRegEx","make","model","selected","date","checked","ProgramTable","App","basename","path","Machines","rootElement","document","getElementById","ReactDOM","render","webpackContext","req","webpackContextResolve","__webpack_require__","o","keys","Object","resolve","module","exports","webpackEmptyContext","webpackAsyncContext","Promise","then","webpackEmptyAsyncContext"],"mappings":"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","file":"static/js/main.fb00e36c.chunk.js","sourcesContent":["const ACCESS_TOKEN_KEY = 'access-token';\nlet JWT;\n\nexport const setAccessToken = (accessToken) => {\n  window.localStorage.setItem(ACCESS_TOKEN_KEY, accessToken);\n};\n\nexport const getAccessToken = () => {\n  return window.localStorage.getItem(ACCESS_TOKEN_KEY);\n};\n\nexport const removeAccessToken = () => {\n  window.localStorage.removeItem(ACCESS_TOKEN_KEY);\n};\n\nexport const hasAccessToken = () => {\n  return !!getAccessToken();\n};\n\nlet jwtIntervalHandle;\nexport const getJwt = async () => {\n  if (JWT) {\n    return JWT;\n  }\n  clearInterval(jwtIntervalHandle);\n  jwtIntervalHandle = setInterval(refreshJwt, 1000 * 60);\n  return await refreshJwt();\n};\n\nexport const refreshJwt = async () => {\n  if (!hasAccessToken()) {\n    return;\n  }\n\n  const response = await request(`${process.env.REACT_APP_API_URL}/user-token?graphql=1`);\n  JWT = response;\n  return response;\n};\n\nexport const removeJwt = () => {\n  JWT = undefined;\n};\n\nexport const request = async (url, options = {}) => {\n  options.headers = {\n    ...options.headers,\n    'Content-Type': 'application/json',\n    Authorization: `Bearer ${getAccessToken()}`,\n  };\n\n  return rawRequest(url, options);\n};\n\nexport const rawRequest = async (url, options) => {\n  const response = await fetch(\n    url,\n    options\n  );\n\n  const text = await response.text();\n  const obj = JSON.parse(text);\n\n  if (response.status >= 200 && response.status < 300) {\n    return obj;\n  }\n\n  if (response.status === 401) {\n    removeAccessToken();\n    window.location = '/login';\n  }\n\n  const error = new Error(response.statusText);\n  error.json = obj;\n  throw error;\n};\n\nexport default request;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { getAccessToken } from '../../utils/request';\n\nfunction isAuthenticated() {\n  return !!getAccessToken();\n}\n\nconst PrivateRoute = ({ component, ...props }) => {\n  return isAuthenticated()\n    ? <Route\n      { ...props }\n      component={component}\n    />\n    : <Redirect to=\"/login\" />;\n};\n\nexport default PrivateRoute;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { getAccessToken } from '../../utils/request';\n\nfunction isAuthenticated() {\n  return !!getAccessToken();\n}\n\nconst UnauthenticatedRoute = ({ component, ...props }) => {\n  return !isAuthenticated()\n    ? <Route\n      { ...props }\n      component={component}\n    />\n    : <Redirect to=\"/\" />;\n};\n\nexport default UnauthenticatedRoute;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Panel = styled.div`\n  margin: 20px;\n`;\n\nconst Home = () => {\n  return (\n    <Panel>\n      <h1>\n        Welcome!\n      </h1>\n      <p>\n        There are some basic tools at the top. Poke around.\n      </p>\n    </Panel>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from 'react';\nimport { getAccessToken } from '../utils/request';\nimport { useLocation } from 'react-router-dom';\n\nconst Private = ({ children }) => {\n  const location = useLocation();\n  const [hasAccessToken, setHasAccessToken] = useState(false);\n\n  useEffect(() => {\n    const accessToken = getAccessToken();\n    setHasAccessToken(!!accessToken);\n  }, [location]);\n\n  return hasAccessToken && (\n    <>\n      { children }\n    </>\n  );\n};\n\nexport default Private;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { removeAccessToken, removeJwt } from '../utils/request';\nimport styled from 'styled-components';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\n\nconst Header = styled.div`\n  border-bottom: solid 1px #eee;\n  padding: 10px;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n\nconst StyledNavLink = styled(NavLink)`\n  text-decoration: none;\n  display: flex;\n  color: #555;\n  padding: 10px;\n  border-radius: 5px;\n  border: solid 1px transparent;\n\n  &.active {\n    border: solid 1px #ddd;\n  }\n\n  &:hover {\n    color: #000;\n    background-color: #eee;\n  }\n`;\n\nconst StyledNavText = styled.div`\n  display: flex;\n  padding: 10px;\n  margin: 1px;\n  color: #555;\n`;\n\nconst LeftNav = styled.div`\n  display: flex;\n  flex-direction: row;\n\n  ${StyledNavLink} {\n    margin-right: 10px;\n  }\n`;\n\nconst RightNav = styled.div`\n  display: flex;\n  flex-direction: row;\n\n  ${StyledNavLink} {\n    margin-left: 10px;\n  }\n`;\n\nconst NavBar = () => {\n  const query = gql`\n  query {\n    Company {\n      name\n    }\n  }\n  `;\n\n  const { data } = useQuery(query);\n\n  const logout = () => {\n    removeAccessToken();\n    removeJwt();\n  };\n\n  return (\n    <Header>\n      <LeftNav>\n        <StyledNavLink exact to=\"/\">Home</StyledNavLink>\n        <StyledNavLink to=\"/machines\">Machines</StyledNavLink>\n        <StyledNavLink to=\"/production\">Production</StyledNavLink>\n        <StyledNavLink to=\"/downtime\">Downtime</StyledNavLink>\n        <StyledNavLink to=\"/diagnostics\">Diagnostics</StyledNavLink>\n        <StyledNavLink to=\"/console\">GraphiQL</StyledNavLink>\n      </LeftNav>\n      <RightNav>\n        <StyledNavText>{data && data.Company[0] && data.Company[0].name}</StyledNavText>\n        <StyledNavLink to=\"/login\" onClick={logout}>Log Out</StyledNavLink>\n      </RightNav>\n    </Header>\n  );\n};\n\nexport default NavBar;\n","import { useEffect, useState, useRef } from 'react';\nimport { request } from './request';\nimport _ from 'lodash';\n\nexport const useAsyncEffect = async (delegate, stateTriggers, destroy) => {\n  useEffect(() => {\n    const controller = new AbortController();\n\n    async function asyncEffect() {\n      return await delegate(controller.signal);\n    }\n\n    asyncEffect();\n\n    return () => {\n      controller.abort();\n\n      if (destroy) {\n        destroy();\n      }\n    };\n\n    // Really, I'm pretty confident I know what I'm doing here.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [...stateTriggers]);\n};\n\nexport const useAsyncInterval  = (delegate, delay = null, stateTriggers) => {\n  const savedCallback = useRef(delegate);\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = delegate;\n  }, [delegate]);\n\n  // Set up the timeout loop.\n  useAsyncEffect(async (abortSignal) => {\n    let id;\n    const tick = async () => {\n      await savedCallback.current(abortSignal);\n\n      if (delay !== null) {\n        id = setTimeout(tick, delay);\n      }\n    };\n\n    tick();\n\n    return () => id && clearTimeout(id);\n  }, [delay, ...stateTriggers]);\n};\n\nexport const useProductionQuery = (query, delay) => {\n  const [ data, setData ] = useState();\n  const [ loading, setLoading ] = useState(true);\n  const [ error, setError ] = useState();\n\n  useAsyncInterval(async (abortSignal) => {\n    try {\n      const result = await request(`${process.env.REACT_APP_API_URL}/reports/production`, {\n        method: 'POST',\n        body: query,\n        signal: abortSignal,\n      });\n\n      setData(result);\n    } catch(e) {\n      setError(e);\n    }\n\n    setLoading(false);\n  }, delay, [query]);\n\n  return { data, error, loading };\n};\n\nexport const useMachinesQuery = (delay) => {\n  const [ data, setData ] = useState();\n  const [ loading, setLoading ] = useState(true);\n  const [ error, setError ] = useState();\n\n  useAsyncInterval(async (abortSignal) => {\n    try {\n      const result = await request(`${process.env.REACT_APP_API_URL}/machines`, {\n        method: 'GET',\n        signal: abortSignal,\n      });\n\n      setData(result);\n    } catch(e) {\n      setError(e);\n    }\n\n    setLoading(false);\n  }, delay, []);\n\n  return { data, error, loading };\n};\n\nexport const useDowntimeQuery = (query) => {\n  const [ data, setData ] = useState();\n  const [ loading, setLoading ] = useState(true);\n  const [ error, setError ] = useState();\n\n  useAsyncEffect(async (abortSignal) => {\n    try {\n      const result = await request(`${process.env.REACT_APP_API_URL}/reports/downtime`, {\n        method: 'POST',\n        body: query,\n        signal: abortSignal,\n      });\n\n      setData(result);\n    } catch(e) {\n      setError(e);\n    }\n\n    setLoading(false);\n  }, [query]);\n\n  return { data, error, loading };\n};\n\nexport const useDebounceState = (defaultValue) => {\n  const [ value, setValue ] = useState(defaultValue);\n\n  const setDebounceValue = _.debounce(setValue, 500);\n\n  return [ value, setDebounceValue ];\n};\n","import styled from 'styled-components';\n\nconst Message = styled.div`\n  font-size: 20px;\n  text-align: center;\n  margin-top: 300px;\n`;\n\nexport default Message;\n","import React from 'react';\nimport { useSubscription } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\nimport Message from './Message';\n\nconst Pill = styled.div`\n  padding: 2px;\n  border-radius: 2px;\n  color: black;\n`;\n\nconst ActivePill = styled(Pill)`\n  background-color: #53D73F;\n  color: white;\n`;\n\nconst IdlePill = styled(Pill)`\n  border-style: solid;\n  border-color: gray;\n`;\n\nconst ExecutionStatus = ({ machineRef }) => {\n  const query = gql`\n    subscription GetCurrentExecution($machineRef: Int!) {\n      currentExecution(args: {machineRef: $machineRef}) {\n        value\n        start\n      }\n    }\n  `;\n\n  const { data, loading, error } = useSubscription(query, {\n    variables: {\n      machineRef,\n    },\n    skip: !machineRef,\n  });\n\n  if (data && data.currentExecution && !!data.currentExecution.length && data.currentExecution[0].value === 'ACTIVE') {\n    return (\n      <div>\n        { loading && 'Loading...' }\n        { data && data.currentExecution && !!data.currentExecution.length && <ActivePill>{data.currentExecution[0].value}</ActivePill> }\n        { error && (\n            <Message>\n              An error occured:\n              <br />\"{error.message}\"\n            </Message>\n          )}\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        { loading && 'Loading...' }\n        { data && data.currentExecution && !!data.currentExecution.length && <IdlePill>{data.currentExecution[0].value}</IdlePill> }\n        { error && (\n            <Message>\n              An error occured:\n              <br />\"{error.message}\"\n            </Message>\n          )}\n      </div>\n    );\n  }\n};\n\nexport default ExecutionStatus;\n","import React, { useEffect, useState } from 'react';\nimport _ from 'lodash';\nimport styled from 'styled-components';\nimport moment from 'moment-timezone';\nimport { useProductionQuery } from '../utils/hooks';\nimport { Sparklines, SparklinesBars, SparklinesLine } from 'react-sparklines';\n\nconst DivContainer = styled.div`\n  width: 155px;\n`;\n\nconst DivLeft = styled.div`\n  float: right;\n  width: 100px;\n`;\n\nconst DivRight = styled.div`\n  width: 50px;\n  float: left;\n`;\n\nconst MINUTE = 60 * 1000;\n\nfunction getFill(data, start, end, period) {\n  const length = moment.utc(end).diff(start, period);\n\n  const items = (data && data.items) || [];\n\n  const first = _.first(items);\n  const last = _.last(items);\n\n  const leadingZeroCount = first\n    ? moment.utc(first[period]).diff(start, period)\n    : length;\n\n  const trailingZeroCount = last\n    ? moment.utc(end).diff(last[period], period)\n    : 0;\n\n  const leadingZeros = _.times(leadingZeroCount, () => null);\n  const trailingZeros = _.times(trailingZeroCount, () => null);\n\n  return { leadingZeros, trailingZeros };\n}\n\nconst Utilization = ({ period, length, machineId, type }) => {\n  const start = moment.utc().startOf(period).subtract(length, period + 's').format();\n  const end = moment.utc().endOf(period).format();\n\n  const query = `{\n    \"start\": \"${start}\",\n    \"end\": \"${end}\",\n    \"data\": [{\n      \"metric\": \"utilizationRate\"\n    }],\n    \"groupBy\": [\n      {\"group\": \"${period}\"}\n    ],\n    \"filter\": {\n      \"machine\": [\"${machineId}\"]\n    },\n    \"flatten\": true\n  }`;\n\n  const { loading, error, data } = useProductionQuery(query, 5 * MINUTE);\n  const [ sparkData, setSparkData ] = useState([]);\n\n  useEffect(() => {\n    const rateData = data && data.items\n     ? data.items.map(item => item.utilizationRate)\n     : [];\n\n    const { leadingZeros, trailingZeros } = getFill(data, start, end, period);\n    setSparkData([...leadingZeros, ...rateData, ...trailingZeros]);\n  }, [data, length, period, start, end]);\n\n  const SparkSettings = type === 'bar' ? SparklinesBars : SparklinesLine;\n\n  return (\n    <div>\n      { loading && 'Loading...' }\n      { data !== undefined && !!data.aggregate &&\n      <DivContainer>\n        <DivLeft>\n          <Sparklines data={sparkData} max={1} min={0}>\n            <SparkSettings style={{ fill: \"#53D73F\" }}/>\n          </Sparklines>\n        </DivLeft>\n        <DivRight>\n          {Math.round(data.aggregate.utilizationRate * 1000) / 10}%\n        </DivRight>\n      </DivContainer> }\n      { error && (\n          <DivContainer>\n          <div>{error.message}</div>\n          </DivContainer>\n        )}\n    </div>\n  );\n};\n\nexport default Utilization;\n","import PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport dataToPoints from './dataToPoints';\n\nclass StateBar extends PureComponent {\n\n    static propTypes = {\n        data: PropTypes.array,\n        width: PropTypes.number,\n        height: PropTypes.number,\n        svgWidth: PropTypes.number,\n        svgHeight: PropTypes.number,\n        preserveAspectRatio: PropTypes.string,\n        margin: PropTypes.number,\n        style: PropTypes.object,\n        min: PropTypes.object,\n        max: PropTypes.object,\n        onMouseMove: PropTypes.func\n    };\n\n    static defaultProps = {\n        data: [],\n        width: 240,\n        height: 60,\n        style: { fill: 'slategray' },\n        //Scale the graphic content of the given element non-uniformly if necessary such that the element's bounding box exactly matches the viewport rectangle.\n        preserveAspectRatio: 'none', //https://www.w3.org/TR/SVG/coords.html#PreserveAspectRatioAttribute\n        margin: 2,\n        onMouseMove: () => {},\n    };\n\n    render() {\n        const {  data, width, height, svgWidth, svgHeight, preserveAspectRatio, margin, style, max, min, onMouseMove} = this.props;\n\n        if (data.length === 0) return null;\n\n        const points = dataToPoints({ data, width, height, margin, max, min });\n\n        const svgOpts = { style: style, viewBox: `0 0 ${width} ${height}`, preserveAspectRatio: preserveAspectRatio };\n        if (svgWidth > 0) svgOpts.width = svgWidth;\n        if (svgHeight > 0) svgOpts.height = svgHeight;\n\n        const fillStyle = {\n            stroke: style.stroke || 'none',\n            strokeWidth: '0',\n            fillOpacity: style.fillOpacity || '.1',\n            fill: style.fill || 'slategray',\n            pointerEvents: 'auto',\n          };\n\n        const tooltips = points.map((p, i) => {\n            return (\n              <circle\n                key={i}\n                cx={p.x}\n                cy={p.height/2}\n                r={2}\n                style={fillStyle}\n                onMouseEnter={e => onMouseMove('enter', data[i], p)}\n                onClick={e => onMouseMove('click', data[i], p)}\n              />\n            );\n          });\n\n        if (points && points.length > 0){\n            return (\n                <svg {...svgOpts}>\n                    {\n                        <g transform=\"scale(1,-1)\">\n                            {tooltips}\n                            {points.map((p, i) =>\n                            <rect\n                                key={i}\n                                x={p.x}\n                                y={-height}\n                                width={p.width}\n                                height={height}\n                                fill={p.color}\n                                onMouseMove={onMouseMove && onMouseMove.bind(this, p)}\n                            />,\n                            )}\n                        </g>\n                    }\n                </svg>\n            );\n        } else {\n            return null;\n        }\n    }\n\n};\n\nexport default StateBar;","const arrayMax  = ({ Math, data }) => \n    Math.max.apply(Math, data.map = (d => d.x));\n\nconst arrayMin  = ({ Math, data }) => \n    Math.min.apply(Math, data.map = (d => d.x));\n\nexport default ({ data, width = 1, height = 1, margin = 0, max = arrayMax(data), min = arrayMin(data) }) => {\n\n    const len = max - min;\n\n    const vheight = (height - margin * 2);\n    const hfactor = (width - margin * 2) / len;\n\n    const mappedPoints = data.map(d => ({\n        x: (d.start - min) * hfactor,\n        width: (d.end - d.start) * hfactor,\n        height: vheight,\n        color: d.color\n    })).filter(d => {\n        return d.width > 0;\n    });\n\n    return mappedPoints;\n};\n","import React, { useState, useEffect } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\nimport moment from 'moment-timezone';\nimport StateBar from './StateBar';\n\nconst DivContainer = styled.div`\n  width: 155px;\n`;\n\nconst colorMapping = {\n  ACTIVE: '#53D73F',\n  READY: '#428bca',\n  UNAVAILABLE: 'gray',\n  INTERRUPTED: '#428bca',\n  STOPPED: '#428bca',\n  PROGRAM_STOPPED: '#428bca',\n};\n\nmoment.tz.setDefault('UTC');\n\nconst computeTimeWindow = (hours) => {\n  const end = moment().endOf('minute');\n  const start = moment(end).subtract(hours, 'hours');\n  return { start, end };\n};\n\nconst ExecutionTimeline = ({ machineRef, hours, height }) => {\n  const query = gql`\n    query getExecutionIntervals(\n      $machineRef: Int!\n      $start: timestamp!\n      $end: timestamp!\n    ) {\n      executionIntervals(\n        args: { machineRef: $machineRef, windowStart: $start, windowEnd: $end }\n      ) {\n        start\n        end\n        value\n      }\n    }\n  `;\n\n  const [timeWindow, setTimeWindow] = useState(computeTimeWindow(hours));\n\n  const options = {\n    variables: {\n      machineRef,\n      ...timeWindow,\n    },\n  };\n  const { loading, error, data } = useQuery(query, options);\n  const executionIntervals = data ? data.executionIntervals : [];\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (!loading) {\n        setTimeWindow(computeTimeWindow(hours));\n      }\n    }, 30000);\n    return () => clearInterval(interval);\n  }, [loading, hours, machineRef]);\n\n  const points = executionIntervals.map((event) => {\n    return {\n      start: moment(event.start).isBefore(timeWindow.start)\n        ? timeWindow.start\n        : moment(event.start),\n      end: event.end ? moment(event.end) : timeWindow.end,\n      color: colorMapping[event.value],\n    };\n  });\n\n  return (\n    <div>\n      {!data && 'Loading...'}\n      {data && data.executionIntervals && (\n        <DivContainer>\n          <StateBar\n            data={points}\n            height={height}\n            min={timeWindow.start}\n            max={timeWindow.end}\n          ></StateBar>\n        </DivContainer>\n      )}\n      {error && <DivContainer>{error.message}</DivContainer>}\n    </div>\n  );\n};\n\nexport default ExecutionTimeline;\n","import React from 'react';\nimport ExecutionStatus from './ExecutionStatus';\nimport Utilization from './Utilization';\nimport ExecutionTimeline from './ExecutionTimeline';\nimport styled from 'styled-components';\nimport {Link} from 'react-router-dom';\n\nconst TableStyle = styled.div`\ntable {\n  border: 1px solid #FFFFFF;\n  width: 100%;\n  text-align: center;\n  vertical-align: bottom;\n  border-collapse: collapse;\n}\ntable td, table th {\n  border: 1px solid #FFFFFF;\n  padding: 3px 2px;\n}\ntable tbody td {\n  font-size: 13px;\n}\ntable tr:nth-child(even) {\n  background: #E0F5DD;\n}\ntable thead {\n  background: #09700B;\n  border-bottom: 5px solid #FFFFFF;\n}\ntable thead th {\n  font-size: 17px;\n  font-weight: bold;\n  color: #FFFFFF;\n  text-align: center;\n  border-left: 2px solid #FFFFFF;\n}\ntable thead th:first-child {\n  border-left: none;\n}\n\ntable tfoot {\n  font-size: 14px;\n  font-weight: bold;\n  color: #333333;\n  background: #D2F5E1;\n  border-top: 3px solid #444444;\n}\ntable tfoot td {\n  font-size: 14px;\n}`\n\nconst List = ({ qty, items }) => {\n  return (\n    <TableStyle>\n    <table>\n      <thead>\n      <tr>\n        <th>Name</th>\n        <th>Make</th>\n        <th>Model</th>\n        <th>Serial Number</th>\n        {(items.length<100 ? <th>Status</th>:<></>)}\n        {/* <th>Location</th> */}\n        {/* <th>Status</th> */}\n        <th>8h Execution</th>\n        {/* <th>15m Spindle Speed</th> */}\n        {/* <th>8h Feed Override</th> */}\n        <th>24h Utilization</th>\n        <th>30d Utilization</th>\n        <th>52w Utilization</th>\n      </tr>\n      </thead>\n      <tbody>\n      {items.map((item) => (\n        <tr key={item.machineRef}>\n          <td><Link to={\"machine/\" + item.machineRef}>{item.name}</Link></td>\n          <td>{item.machineMake}</td>\n          <td>{item.machineModel}</td>\n          <td>{item.serialNumber}</td>\n          {/* <td>{item.location}</td> */}\n          {(items.length<100 ? <td><ExecutionStatus machineRef={item.machineRef} /></td>:<></>)}\n          {/* <td>{Math.round(getValueFromKey(item.currentQuantities,\"path_feedrate\"))}</td> */}\n          {/* <td>{getValueFromKey(item.currentQuantities,\"Fovr\")}</td> */}\n          <td><ExecutionTimeline machineRef={item.machineRef} hours={8} height={30} /></td>\n          {/* <td><SparkMetric machineRef={item.machineRef} metricKey={'S1speed'} seconds={900} bucketWidth={'5'}/></td> */}\n          {/* <td><SparkMetric machineRef={item.machineRef} metricKey={'Fovr'} seconds={28800} bucketWidth={'30'}/></td> */}\n          <td><Utilization machineId={item.id} period={'hour'} length={24} type={'bar'} /></td>\n          <td><Utilization machineId={item.id} period={'day'} length={30} type={'bar'} /></td>\n          <td><Utilization machineId={item.id} period={'week'} length={52} type={'line'}/></td>\n        </tr>\n      ))}\n      </tbody>\n    </table>\n    <div>{items.length} Machines</div>\n    </TableStyle>\n  );\n};\n\nexport default List;\n","import React from 'react';\nimport { useMachinesQuery } from '../utils/hooks';\nimport List from './List';\nimport Message from './Message';\n\nconst Home = () => {\n  const { loading, error, data } = useMachinesQuery();\n\n  return (\n    <div>\n      <div>\n        {loading && <Message>Loading...</Message>}\n        {data && <List items={data} />}\n        {error && (\n          <Message>\n            An error occured:\n            <br />\"{error.message}\"\n          </Message>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import { ApolloLink, split } from 'apollo-link';\nimport { WebSocketLink } from 'apollo-link-ws';\nimport { createHttpLink } from 'apollo-link-http';\nimport { setContext } from 'apollo-link-context';\nimport { onError } from 'apollo-link-error';\nimport { getMainDefinition } from 'apollo-utilities';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\n\nimport { getJwt, removeJwt } from './utils/request';\nimport ApolloClient from 'apollo-client';\n\nconst wsLink = new WebSocketLink({\n  uri: `wss://${process.env.REACT_APP_GRAPHQL_PATH}`,\n  options: {\n    lazy: true,\n    reconnect: true,\n    connectionParams: async () => {\n      const jwt = await getJwt();\n      return {\n        headers: {\n          Authorization: `Bearer ${jwt}`,\n        },\n      };\n    },\n  },\n});\n\nconst errorLink = onError(\n  ({ operation, networkError, graphQLErrors, forward }) => {\n    const definition = getMainDefinition(operation.query);\n    if (definition.operation === 'subscription' && networkError) {\n      removeJwt();\n      wsLink.subscriptionClient.close(false, false);\n    }\n\n    graphQLErrors &&\n      graphQLErrors.forEach(err => {\n        if (err.extensions && err.extensions.code === 'invalid-jwt') {\n          removeJwt();\n        }\n      });\n\n    return forward(operation);\n  }\n);\n\nconst authLink = setContext(async (_, { headers }) => {\n  const jwt = await getJwt();\n\n  return {\n    headers: {\n      ...headers,\n      Authorization: `Bearer ${jwt}`,\n    },\n  };\n});\n\nconst httpLink = authLink.concat(\n  createHttpLink({\n    uri: `https://${process.env.REACT_APP_GRAPHQL_PATH}`,\n    fetch,\n  })\n);\n\nconst splitLink = split(\n  ({ query }) => {\n    const definition = getMainDefinition(query);\n    return (\n      definition.kind === 'OperationDefinition' &&\n      definition.operation === 'subscription'\n    );\n  },\n  wsLink,\n  httpLink\n);\n\nexport const link = ApolloLink.from([errorLink, splitLink]);\n\nconst client = new ApolloClient({\n  link,\n  cache: new InMemoryCache(),\n});\n\nexport default client;\n","import React, { useState, useRef, useEffect } from 'react';\nimport GraphiQL from 'graphiql';\nimport GraphiQLExplorer from 'graphiql-explorer';\nimport 'graphiql/graphiql.css';\nimport { introspectSchema } from 'graphql-tools';\nimport { execute } from 'apollo-link';\nimport { link } from '../client';\nimport { parse } from 'graphql';\n\nconst fetcher = (operation) => {\n  operation.query = parse(operation.query);\n  return execute(link, operation);\n};\n\nconst Console = () => {\n  const graphiql = useRef(null);\n  const [explorerIsOpen, setExplorerIsOpen] = useState(true);\n  const [schema, setSchema] = useState(null);\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    async function fetchSchema() {\n      const graphqlSchema = await introspectSchema(link);\n      const editor = graphiql.current.getQueryEditor();\n      editor.setOption('extraKeys', { ...(editor.options.extraKeys || {}) });\n      setSchema(graphqlSchema);\n    }\n    fetchSchema();\n  }, []);\n\n  return (\n    <div className=\"graphiql-container\">\n      <GraphiQLExplorer\n        schema={schema}\n        query={query}\n        explorerIsOpen={explorerIsOpen}\n        onEdit={setQuery}\n        onRunOperation={operation => graphiql.current.handleRunQuery(operation)}\n        onToggleExplorer={() => setExplorerIsOpen(!explorerIsOpen)}\n      />\n      <GraphiQL\n        fetcher={fetcher}\n        ref={graphiql}\n        schema={schema}\n        query={query}\n        onEditQuery={setQuery}\n        >\n        <GraphiQL.Toolbar>\n          <GraphiQL.Button\n            onClick={() => setExplorerIsOpen(!explorerIsOpen)}\n            label=\"Explorer\"\n            title=\"Toggle Explorer\"\n          />\n          <GraphiQL.Button\n            onClick={() => graphiql.current.handleCopyQuery()}\n            title=\"Copy Query (Shift-Ctrl-C)\"\n            label=\"Copy\"\n          />\n          <GraphiQL.Button\n            onClick={() => graphiql.current.handlePrettifyQuery()}\n            label=\"Prettify\"\n            title=\"Prettify Query (Shift-Ctrl-P)\"\n          />\n          <GraphiQL.Button\n            onClick={() => graphiql.current.handleToggleHistory()}\n            label=\"History\"\n            title=\"Show History\"\n          />\n        </GraphiQL.Toolbar>\n      </GraphiQL>\n    </div>\n  );\n};\n\nexport default Console;\n","import styled from 'styled-components';\n\nconst Loading = styled.div`\n  font-size: 20px;\n  text-align: center;\n  margin-top: 300px;\n`;\n\nexport default Loading;","import React from 'react';\nimport styled from 'styled-components';\nimport moment from 'moment-timezone';\nimport { NavLink } from 'react-router-dom';\nimport Loading from '../Loading';\n\nconst Item = styled.div`\n  padding: 10px;\n  margin: 5px;\n  border: solid 1px #000;\n`;\n\nconst DiagnosticsList = ({ items, machineRef }) => {\n  return (\n    <div>\n      {\n        items.length > 0 ?\n        items.map((item) => {\n          return <Item key={item.key}>\n            key: {item.key} <br/>\n            value: {item.value} <br/>\n            {item.eventTime && moment.utc(item.eventTime).tz('America/New_York').format('MMM D, YYYY \\\\a\\\\t h:mm:ss.SSS A')}<br/>\n            <NavLink to={`/diagnostics/${machineRef}/${item.key}`}>Graph</NavLink>\n          </Item>\n        }) :\n        <Loading>No Data</Loading>\n      }\n    </div>\n  );\n};\n\nexport default DiagnosticsList;\n","import React from 'react';\nimport gql from 'graphql-tag';\nimport Loading from './Loading';\nimport { useQuery } from '@apollo/react-hooks';\n\nconst MachineDropdown = ({ setMachineRef }) => {\n  const query = gql`\n    query {\n      Machine {\n        name\n        machineRef\n      }\n    }\n  `;\n\n  const { loading, error, data } = useQuery(query);\n\n  const handleChange = event => {\n    setMachineRef(event.target.value);\n  };\n\n  return (\n    <div>\n      {\n        <select onChange={handleChange}>\n          {loading && <option>Loading...</option>}\n          {data && (\n            <>\n              <option value=\"\">None Selected</option>\n              {data.Machine.map(item => {\n                return (\n                  <option key={item.machineRef} value={item.machineRef}>\n                    {item.name}\n                  </option>\n                );\n              })}\n            </>\n          )}\n        </select>\n      }\n      {error && (\n        <Loading>\n          An error occured:\n          <br />\"{error.message}\"\n        </Loading>\n      )}\n    </div>\n  );\n};\n\nexport default MachineDropdown;\n","import React, { useState } from 'react';\nimport { useSubscription } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport DiagnosticsList from './DiagnosticsList';\nimport Loading from '../Loading';\nimport MachineDropdown from '../MachineDropdown';\nimport { useDebounceState } from '../../utils/hooks';\n\nconst Diagnostics = () => {\n  const query = gql`\n    subscription GetQuantities($machineRef: Int!, $filterKey: String!) {\n      currentQuantities(\n        where: {\n          machine: { machineRef: { _eq: $machineRef } }\n          metric: { key: { _ilike: $filterKey } }\n        }\n      ) {\n        value\n        key\n        eventTime\n      }\n    }\n  `;\n\n  const [machineRef, setMachineRef] = useState();\n  const [filterKey, setFilterKey] = useDebounceState('%');\n  const { loading, error, data } = useSubscription(query, {\n    variables: {\n      machineRef,\n      filterKey: filterKey || ';',\n    },\n    skip: !machineRef,\n  });\n\n  return (\n    <div>\n      <MachineDropdown setMachineRef={setMachineRef} />\n      Key Filter:&nbsp;\n      <input\n        type=\"text\"\n        onChange={event => setFilterKey(`%${event.target.value}%`)}\n      />\n      {!machineRef && <Loading>Choose a machine</Loading>}\n      {loading && <Loading>Loading...</Loading>}\n      {data && (\n        <DiagnosticsList\n          items={data.currentQuantities}\n          machineRef={machineRef}\n        />\n      )}\n      {error && (\n        <Loading>\n          An error occured:\n          <br />\"{error.message}\"\n        </Loading>\n      )}\n    </div>\n  );\n};\n\nexport default Diagnostics;\n","import React, { useState, useEffect, useRef } from 'react';\nimport moment from 'moment-timezone';\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport ReactEcharts from 'echarts-for-react';\nimport Loading from '../Loading';\n\nmoment.tz.setDefault('UTC');\n\nconst currentTimeWindow = () => {\n  return {\n    start: moment().subtract(1, 'day'),\n    end: moment(),\n  };\n};\n\nconst useInterval = (callback, delay) => {\n  const savedCallback = useRef();\n  const [active, setActive] = useState(true);\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    function tick() {\n      if (active) savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay, active]);\n\n  return [active, setActive];\n};\n\nconst query = gql`\n  query GetAggregatedQuantities(\n    $machineRef: Int!\n    $key: String!\n    $bucket: interval!\n    $start: timestamp!\n    $end: timestamp!\n  ) {\n    aggregatedQuantities(\n      args: {\n        machineRef: $machineRef\n        metricKey: $key\n        bucketWidth: $bucket\n        windowStart: $start\n        windowEnd: $end\n      }\n      order_by: { bucket: asc }\n    ) {\n      avg\n      min\n      max\n      bucket\n    }\n  }\n`;\n\nconst DiagnosticsGraph = () => {\n  const { machineRef, key } = useParams();\n  const [bucket, setBucket] = useState('1s');\n  const [timeWindow, setTimeWindow] = useState(currentTimeWindow());\n\n  const { loading, error, data } = useQuery(query, {\n    variables: {\n      machineRef,\n      key,\n      bucket: bucket,\n      start: timeWindow.start.toISOString(),\n      end: timeWindow.end.toISOString(),\n    },\n    skip: !machineRef || !key,\n  });\n\n  const events = data ? data.aggregatedQuantities : [];\n  const source = events.map(event => [moment(event.bucket).valueOf(), event.avg])\n\n  const [isActive, setIsActive] = useInterval(() => {\n    if (!loading) {\n      setTimeWindow(currentTimeWindow());\n    }\n  }, 1000);\n\n  const option = {\n    animation: false,\n    tooltip: {},\n    xAxis: {\n      type: 'time',\n      min: timeWindow.start.toISOString(),\n      max: timeWindow.end.toISOString(),\n    },\n    yAxis: {\n      type: 'value',\n      min: 'dataMin',\n      max: 'dataMax',\n    },\n    series: [\n      {\n        id: key,\n        type: 'line',\n        step: 'end',\n        name: key,\n        symbolSize: 2,\n        lineStyle: { width: 1 },\n        datasetIndex: 0,\n      },\n    ],\n    dataset: { id: key, source: source },\n    dataZoom: [\n      {\n        type: 'inside',\n        filterMode: 'none',\n      },\n      {\n        type: 'slider',\n        filterMode: 'none',\n      },\n    ],\n  };\n\n  return (\n    <div>\n      Bucket:&nbsp;\n      <select onChange={event => setBucket(event.target.value)}>\n        <option value=\"1s\">Second</option>\n        <option value=\"1m\">Minute</option>\n        <option value=\"1h\">Hour</option>\n      </select>\n      &nbsp; # of Data Points:&nbsp;\n      {data && data.aggregatedQuantities ? data.aggregatedQuantities.length : 0}\n      &nbsp;{isActive ? '(live)' : ''}\n      {!data && loading && <Loading>Loading...</Loading>}\n      {data && (\n        <div\n          onMouseEnter={() => setIsActive(false)}\n          onMouseLeave={() => setIsActive(true)}\n        >\n          <ReactEcharts option={option} />\n        </div>\n      )}\n      {error && (\n        <Loading>\n          An error occured:\n          <br />\"{error.message}\"\n        </Loading>\n      )}\n    </div>\n  );\n};\n\nexport default DiagnosticsGraph;\n","import React from 'react';\n\nconst Logo = ({ width }) => {\n  return (\n    <svg width={width} id=\"machinemetrics-logo\" viewBox=\"0 0 2783 452\" version=\"1.1\">\n      <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n        <path id=\"logomark\" fill=\"#16a500\" d=\"M242.54355,54.6212449 C235.046875,54.1028633 230.499573,54.1028646 228.055122,54.1028646 C124.547745,54.1028633 54.0598892,137.961807 54.0598958,226 C54.0598984,259.739594 60.7960052,275.739594 63.2309028,280.222222 L151.675068,112.184142 L212.4164,112.184142 C151.580764,228.420671 68.1812377,387.76924 68.1812377,387.76924 C26.1169584,346.725861 0,289.412902 0,226 C0,101.183647 101.183647,0 226,0 C240.701233,0 255.074614,1.40370186 268.993426,4.08438888 L242.54355,54.6212449 Z M184.361853,448.172324 L298.163183,229.999349 L358.996745,229.999349 L274.17513,392.666016 C358.175135,364.666014 398.508453,292.492845 397.841797,225.992839 C397.17514,159.492832 357.67513,115.326172 357.67513,115.326172 L384.304458,64.7060867 C426.083988,105.716053 452,162.831522 452,226 C452,350.816353 350.816353,452 226,452 C211.775418,452 197.857774,450.685846 184.361853,448.172324 Z M311.17699,6.05818403 L371.756201,6.00571243 L144.976295,437.957781 C144.976295,437.957781 138.510738,436.161574 120.801422,426.863975 C103.092106,417.566376 97.5085196,413.036649 97.5085196,413.036649 L311.17699,6.05818403 Z\" />\n        <path id=\"machinemetrics\" fill=\"#484b4d\" d=\"M607.69,166.315 L648.56,166.315 L648.56,187.665 L649.17,187.665 C654.863362,179.531626 661.725793,173.228356 669.7575,168.755 C677.789207,164.281644 686.989948,162.045 697.36,162.045 C707.323383,162.045 716.422459,163.976647 724.6575,167.84 C732.892541,171.703353 739.144979,178.514951 743.415,188.275 C748.09169,181.361632 754.445793,175.261693 762.4775,169.975 C770.509207,164.688307 780.014945,162.045 790.995,162.045 C799.331708,162.045 807.058298,163.061657 814.175,165.095 C821.291702,167.128344 827.391641,170.381644 832.475,174.855 C837.558359,179.328356 841.523319,185.174131 844.37,192.3925 C847.216681,199.610869 848.64,208.303283 848.64,218.47 L848.64,324 L805.33,324 L805.33,234.635 C805.33,229.348307 805.126669,224.36669 804.72,219.69 C804.313331,215.01331 803.195009,210.946684 801.365,207.49 C799.534991,204.033316 796.840851,201.288343 793.2825,199.255 C789.724149,197.221656 784.89503,196.205 778.795,196.205 C772.69497,196.205 767.764185,197.374155 764.0025,199.7125 C760.240815,202.050845 757.292511,205.100815 755.1575,208.8625 C753.022489,212.624185 751.59917,216.894143 750.8875,221.6725 C750.17583,226.450857 749.82,231.279976 749.82,236.16 L749.82,324 L706.51,324 L706.51,235.55 C706.51,230.87331 706.408334,226.247523 706.205,221.6725 C706.001666,217.097477 705.137508,212.878353 703.6125,209.015 C702.087492,205.151647 699.545851,202.050845 695.9875,199.7125 C692.429149,197.374155 687.193368,196.205 680.28,196.205 C678.246656,196.205 675.552517,196.662495 672.1975,197.5775 C668.842483,198.492505 665.589182,200.220821 662.4375,202.7625 C659.285818,205.304179 656.591678,208.964143 654.355,213.7425 C652.118322,218.520857 651,224.773295 651,232.5 L651,324 L607.69,324 L607.69,166.315 Z M880.97,214.81 C881.580003,204.643282 884.121644,196.205034 888.595,189.495 C893.068356,182.784966 898.761632,177.396687 905.675,173.33 C912.588368,169.263313 920.36579,166.365842 929.0075,164.6375 C937.64921,162.909158 946.341623,162.045 955.085,162.045 C963.01504,162.045 971.046626,162.604161 979.18,163.7225 C987.313374,164.840839 994.734966,167.02665 1001.445,170.28 C1008.15503,173.53335 1013.64498,178.057471 1017.915,183.8525 C1022.18502,189.647529 1024.32,197.323286 1024.32,206.88 L1024.32,288.925 C1024.32,296.041702 1024.72666,302.853301 1025.54,309.36 C1026.35334,315.866699 1027.77666,320.74665 1029.81,324 L985.89,324 C985.076663,321.559988 984.415836,319.069179 983.9075,316.5275 C983.399164,313.985821 983.043334,311.393347 982.84,308.75 C975.926632,315.866702 967.79338,320.848319 958.44,323.695 C949.08662,326.541681 939.530049,327.965 929.77,327.965 C922.246629,327.965 915.231699,327.050009 908.725,325.22 C902.218301,323.389991 896.525024,320.543353 891.645,316.68 C886.764976,312.816647 882.952514,307.936696 880.2075,302.04 C877.462486,296.143304 876.09,289.128374 876.09,280.995 C876.09,272.048289 877.665818,264.677529 880.8175,258.8825 C883.969182,253.087471 888.035808,248.461684 893.0175,245.005 C897.999192,241.548316 903.692468,238.955842 910.0975,237.2275 C916.502532,235.499158 922.958301,234.126672 929.465,233.11 C935.971699,232.093328 942.376635,231.280003 948.68,230.67 C954.983365,230.059997 960.574976,229.145006 965.455,227.925 C970.335024,226.704994 974.198319,224.925845 977.045,222.5875 C979.891681,220.249155 981.213334,216.843356 981.01,212.37 C981.01,207.69331 980.247508,203.982514 978.7225,201.2375 C977.197492,198.492486 975.164179,196.357508 972.6225,194.8325 C970.080821,193.307492 967.132517,192.290836 963.7775,191.7825 C960.422483,191.274164 956.813353,191.02 952.95,191.02 C944.409957,191.02 937.700024,192.849982 932.82,196.51 C927.939976,200.170018 925.093337,206.269957 924.28,214.81 L880.97,214.81 Z M981.01,246.835 C979.179991,248.461675 976.892514,249.732495 974.1475,250.6475 C971.402486,251.562505 968.454182,252.324997 965.3025,252.935 C962.150818,253.545003 958.846684,254.053331 955.39,254.46 C951.933316,254.866669 948.476684,255.374997 945.02,255.985 C941.76665,256.595003 938.564182,257.408328 935.4125,258.425 C932.260818,259.441672 929.515845,260.814158 927.1775,262.5425 C924.839155,264.270842 922.95834,266.456653 921.535,269.1 C920.11166,271.743347 919.4,275.098313 919.4,279.165 C919.4,283.028353 920.11166,286.281653 921.535,288.925 C922.95834,291.568347 924.889988,293.652492 927.33,295.1775 C929.770012,296.702508 932.61665,297.769997 935.87,298.38 C939.12335,298.990003 942.478316,299.295 945.935,299.295 C954.475043,299.295 961.08331,297.871681 965.76,295.025 C970.43669,292.178319 973.893322,288.77252 976.13,284.8075 C978.366678,280.84248 979.739164,276.826687 980.2475,272.76 C980.755836,268.693313 981.01,265.440012 981.01,263 L981.01,246.835 Z M1165.23,221.825 C1162.38332,203.728243 1151.70843,194.68 1133.205,194.68 C1126.29163,194.68 1120.49669,196.255818 1115.82,199.4075 C1111.14331,202.559182 1107.33085,206.625808 1104.3825,211.6075 C1101.43415,216.589192 1099.35001,222.079137 1098.13,228.0775 C1096.90999,234.075863 1096.3,240.023304 1096.3,245.92 C1096.3,251.613362 1096.90999,257.408304 1098.13,263.305 C1099.35001,269.201696 1101.33249,274.539143 1104.0775,279.3175 C1106.82251,284.095857 1110.53331,288.009985 1115.21,291.06 C1119.88669,294.110015 1125.57997,295.635 1132.29,295.635 C1142.66005,295.635 1150.64081,292.737529 1156.2325,286.9425 C1161.82419,281.147471 1165.33166,273.370049 1166.755,263.61 L1208.54,263.61 C1205.69332,284.553438 1197.56007,300.514945 1184.14,311.495 C1170.71993,322.475055 1153.53844,327.965 1132.595,327.965 C1120.80161,327.965 1109.97422,325.98252 1100.1125,322.0175 C1090.25078,318.05248 1081.86337,312.511702 1074.95,305.395 C1068.03663,298.278298 1062.64835,289.789216 1058.785,279.9275 C1054.92165,270.065784 1052.99,259.238392 1052.99,247.445 C1052.99,235.244939 1054.76915,223.909219 1058.3275,213.4375 C1061.88585,202.965781 1067.12163,193.917538 1074.035,186.2925 C1080.94837,178.667462 1089.38662,172.720021 1099.35,168.45 C1109.31338,164.179979 1120.69994,162.045 1133.51,162.045 C1142.86338,162.045 1151.86079,163.264988 1160.5025,165.705 C1169.14421,168.145012 1176.8708,171.855808 1183.6825,176.8375 C1190.4942,181.819192 1196.03498,188.020796 1200.305,195.4425 C1204.57502,202.864204 1207.015,211.658282 1207.625,221.825 L1165.23,221.825 Z M1232.94,106.23 L1276.25,106.23 L1276.25,188.275 L1277.165,188.275 C1282.65503,179.124954 1289.66996,172.465854 1298.21,168.2975 C1306.75004,164.129146 1315.08663,162.045 1323.22,162.045 C1334.81006,162.045 1344.3158,163.620818 1351.7375,166.7725 C1359.1592,169.924182 1365.00498,174.295805 1369.275,179.8875 C1373.54502,185.479195 1376.54416,192.290793 1378.2725,200.3225 C1380.00084,208.354207 1380.865,217.249951 1380.865,227.01 L1380.865,324 L1337.555,324 L1337.555,234.94 C1337.555,221.926602 1335.52169,212.217532 1331.455,205.8125 C1327.38831,199.407468 1320.17005,196.205 1309.8,196.205 C1298.00661,196.205 1289.46669,199.712465 1284.18,206.7275 C1278.89331,213.742535 1276.25,225.281586 1276.25,241.345 L1276.25,324 L1232.94,324 L1232.94,106.23 Z M1458.335,141.915 L1415.025,141.915 L1415.025,106.23 L1458.335,106.23 L1458.335,141.915 Z M1415.025,166.315 L1458.335,166.315 L1458.335,324 L1415.025,324 L1415.025,166.315 Z M1492.495,166.315 L1533.67,166.315 L1533.67,188.275 L1534.585,188.275 C1540.07503,179.124954 1547.19162,172.465854 1555.935,168.2975 C1564.67838,164.129146 1573.62495,162.045 1582.775,162.045 C1594.36506,162.045 1603.8708,163.620818 1611.2925,166.7725 C1618.7142,169.924182 1624.55998,174.295805 1628.83,179.8875 C1633.10002,185.479195 1636.09916,192.290793 1637.8275,200.3225 C1639.55584,208.354207 1640.42,217.249951 1640.42,227.01 L1640.42,324 L1597.11,324 L1597.11,234.94 C1597.11,221.926602 1595.07669,212.217532 1591.01,205.8125 C1586.94331,199.407468 1579.72505,196.205 1569.355,196.205 C1557.56161,196.205 1549.02169,199.712465 1543.735,206.7275 C1538.44831,213.742535 1535.805,225.281586 1535.805,241.345 L1535.805,324 L1492.495,324 L1492.495,166.315 Z M1779.5,228.23 C1777.46666,217.249945 1773.85753,208.913362 1768.6725,203.22 C1763.48747,197.526638 1755.60839,194.68 1745.035,194.68 C1738.12163,194.68 1732.37752,195.849155 1727.8025,198.1875 C1723.22748,200.525845 1719.56751,203.423316 1716.8225,206.88 C1714.07749,210.336684 1712.14584,213.996647 1711.0275,217.86 C1709.90916,221.723353 1709.24833,225.179985 1709.045,228.23 L1779.5,228.23 Z M1709.045,255.68 C1709.655,269.71007 1713.2133,279.876635 1719.72,286.18 C1726.2267,292.483365 1735.57994,295.635 1747.78,295.635 C1756.52338,295.635 1764.04664,293.449189 1770.35,289.0775 C1776.65336,284.705811 1780.51666,280.080024 1781.94,275.2 L1820.065,275.2 C1813.96497,294.110095 1804.61173,307.631626 1792.005,315.765 C1779.39827,323.898374 1764.14842,327.965 1746.255,327.965 C1733.8516,327.965 1722.66838,325.98252 1712.705,322.0175 C1702.74162,318.05248 1694.30337,312.410037 1687.39,305.09 C1680.47663,297.769963 1675.13919,289.026717 1671.3775,278.86 C1667.61581,268.693282 1665.735,257.510061 1665.735,245.31 C1665.735,233.516608 1667.66665,222.536717 1671.53,212.37 C1675.39335,202.203282 1680.8833,193.409204 1688,185.9875 C1695.1167,178.565796 1703.60578,172.720021 1713.4675,168.45 C1723.32922,164.179979 1734.25827,162.045 1746.255,162.045 C1759.67507,162.045 1771.36662,164.637474 1781.33,169.8225 C1791.29338,175.007526 1799.47747,181.971623 1805.8825,190.715 C1812.28753,199.458377 1816.91332,209.421611 1819.76,220.605 C1822.60668,231.788389 1823.62334,243.479939 1822.81,255.68 L1709.045,255.68 Z M1850.26,166.62 L1867.95,166.62 L1867.95,193.155 L1868.865,193.155 C1873.94836,183.394951 1880.60746,175.770027 1888.8425,170.28 C1897.07754,164.789973 1907.59994,162.045 1920.41,162.045 C1930.78005,162.045 1940.18412,164.586641 1948.6225,169.67 C1957.06088,174.753359 1962.70332,182.479948 1965.55,192.85 C1970.22669,182.479948 1977.13995,174.753359 1986.29,169.67 C1995.44005,164.586641 2005.19995,162.045 2015.57,162.045 C2050.34017,162.045 2067.725,180.446483 2067.725,217.25 L2067.725,324 L2048.51,324 L2048.51,218.165 C2048.51,205.151602 2045.76503,195.239201 2040.275,188.4275 C2034.78497,181.615799 2025.12674,178.21 2011.3,178.21 C2002.96329,178.21 1996.05003,179.785818 1990.56,182.9375 C1985.06997,186.089182 1980.69835,190.308307 1977.445,195.595 C1974.19165,200.881693 1971.90417,206.930799 1970.5825,213.7425 C1969.26083,220.554201 1968.6,227.619963 1968.6,234.94 L1968.6,324 L1949.385,324 L1949.385,217.25 C1949.385,211.963307 1948.82584,206.930857 1947.7075,202.1525 C1946.58916,197.374143 1944.75918,193.205851 1942.2175,189.6475 C1939.67582,186.089149 1936.27002,183.293343 1932,181.26 C1927.72998,179.226656 1922.54503,178.21 1916.445,178.21 C1908.31163,178.21 1901.24586,179.684152 1895.2475,182.6325 C1889.24914,185.580848 1884.36919,189.647474 1880.6075,194.8325 C1876.84581,200.017526 1874.05001,206.117465 1872.22,213.1325 C1870.38999,220.147535 1869.475,227.823292 1869.475,236.16 L1869.475,324 L1850.26,324 L1850.26,166.62 Z M2217.48,234.33 C2217.27667,227.009963 2216.00585,219.995034 2213.6675,213.285 C2211.32915,206.574966 2208.02502,200.627526 2203.755,195.4425 C2199.48498,190.257474 2194.30003,186.089182 2188.2,182.9375 C2182.09997,179.785818 2175.18671,178.21 2167.46,178.21 C2159.52996,178.21 2152.51503,179.785818 2146.415,182.9375 C2140.31497,186.089182 2135.13002,190.257474 2130.86,195.4425 C2126.58998,200.627526 2123.18418,206.625799 2120.6425,213.4375 C2118.10082,220.249201 2116.42334,227.213298 2115.61,234.33 L2217.48,234.33 Z M2115.61,250.495 C2115.61,257.408368 2116.57582,264.575796 2118.5075,271.9975 C2120.43918,279.419204 2123.53998,286.078304 2127.81,291.975 C2132.08002,297.871696 2137.4683,302.751647 2143.975,306.615 C2150.4817,310.478353 2158.30995,312.41 2167.46,312.41 C2181.49007,312.41 2192.46996,308.750037 2200.4,301.43 C2208.33004,294.109963 2213.81998,284.350061 2216.87,272.15 L2236.085,272.15 C2232.01831,290.043423 2224.54589,303.869951 2213.6675,313.63 C2202.78911,323.390049 2187.38677,328.27 2167.46,328.27 C2155.0566,328.27 2144.33088,326.084189 2135.2825,321.7125 C2126.23412,317.340811 2118.86336,311.342538 2113.17,303.7175 C2107.47664,296.092462 2103.25751,287.24755 2100.5125,277.1825 C2097.76749,267.11745 2096.395,256.493389 2096.395,245.31 C2096.395,234.939948 2097.76749,224.773383 2100.5125,214.81 C2103.25751,204.846617 2107.47664,195.950872 2113.17,188.1225 C2118.86336,180.294128 2126.23412,173.990857 2135.2825,169.2125 C2144.33088,164.434143 2155.0566,162.045 2167.46,162.045 C2180.06673,162.045 2190.84329,164.586641 2199.79,169.67 C2208.73671,174.753359 2216.00581,181.412459 2221.5975,189.6475 C2227.18919,197.882541 2231.20499,207.337447 2233.645,218.0125 C2236.08501,228.687553 2237.10167,239.514945 2236.695,250.495 L2115.61,250.495 Z M2293.12,166.62 L2325.145,166.62 L2325.145,182.785 L2293.12,182.785 L2293.12,288.925 C2293.12,295.228365 2293.98416,300.159149 2295.7125,303.7175 C2297.44084,307.275851 2301.76163,309.258331 2308.675,309.665 C2314.16503,309.665 2319.65497,309.360003 2325.145,308.75 L2325.145,324.915 C2322.29832,324.915 2319.45168,325.016666 2316.605,325.22 C2313.75832,325.423334 2310.91168,325.525 2308.065,325.525 C2295.25494,325.525 2286.30836,323.034192 2281.225,318.0525 C2276.14164,313.070808 2273.70167,303.870067 2273.905,290.45 L2273.905,182.785 L2246.455,182.785 L2246.455,166.62 L2273.905,166.62 L2273.905,119.345 L2293.12,119.345 L2293.12,166.62 Z M2352.9,166.62 L2370.59,166.62 L2370.59,203.525 L2371.2,203.525 C2376.08002,190.714936 2383.65412,180.853368 2393.9225,173.94 C2404.19088,167.026632 2416.4416,163.874997 2430.675,164.485 L2430.675,183.7 C2421.93162,183.293331 2414.0017,184.462486 2406.885,187.2075 C2399.7683,189.952514 2393.61753,193.866641 2388.4325,198.95 C2383.24747,204.033359 2379.23168,210.082465 2376.385,217.0975 C2373.53832,224.112535 2372.115,231.788292 2372.115,240.125 L2372.115,324 L2352.9,324 L2352.9,166.62 Z M2449.28,106.23 L2468.495,106.23 L2468.495,137.035 L2449.28,137.035 L2449.28,106.23 Z M2449.28,166.62 L2468.495,166.62 L2468.495,324 L2449.28,324 L2449.28,166.62 Z M2616.42,216.03 C2613.77665,204.236608 2608.8967,194.985034 2601.78,188.275 C2594.6633,181.564966 2584.70006,178.21 2571.89,178.21 C2562.73995,178.21 2554.70837,180.141647 2547.795,184.005 C2540.88163,187.868353 2535.13752,192.951635 2530.5625,199.255 C2525.98748,205.558365 2522.53085,212.725793 2520.1925,220.7575 C2517.85415,228.789207 2516.685,236.973292 2516.685,245.31 C2516.685,253.646708 2517.85415,261.830793 2520.1925,269.8625 C2522.53085,277.894207 2525.98748,285.061635 2530.5625,291.365 C2535.13752,297.668365 2540.88163,302.751647 2547.795,306.615 C2554.70837,310.478353 2562.73995,312.41 2571.89,312.41 C2577.7867,312.41 2583.37831,311.291678 2588.665,309.055 C2593.95169,306.818322 2598.62831,303.71752 2602.695,299.7525 C2606.76169,295.78748 2610.11665,291.060027 2612.76,285.57 C2615.40335,280.079973 2617.03,274.081699 2617.64,267.575 L2636.855,267.575 C2634.21165,286.688429 2627.19672,301.582447 2615.81,312.2575 C2604.42328,322.932553 2589.78342,328.27 2571.89,328.27 C2559.89327,328.27 2549.26921,326.084189 2540.0175,321.7125 C2530.76579,317.340811 2522.98836,311.393371 2516.685,303.87 C2510.38164,296.346629 2505.60335,287.55255 2502.35,277.4875 C2499.09665,267.42245 2497.47,256.696724 2497.47,245.31 C2497.47,233.923276 2499.09665,223.19755 2502.35,213.1325 C2505.60335,203.06745 2510.38164,194.273371 2516.685,186.75 C2522.98836,179.226629 2530.76579,173.228356 2540.0175,168.755 C2549.26921,164.281644 2559.89327,162.045 2571.89,162.045 C2588.76675,162.045 2603.05077,166.518289 2614.7425,175.465 C2626.43423,184.411711 2633.39832,197.933243 2635.635,216.03 L2616.42,216.03 Z M2757.94,212.675 C2757.73667,206.778304 2756.51668,201.644189 2754.28,197.2725 C2752.04332,192.900811 2749.04419,189.291681 2745.2825,186.445 C2741.52081,183.598319 2737.20002,181.514173 2732.32,180.1925 C2727.43998,178.870827 2722.25503,178.21 2716.765,178.21 C2712.49498,178.21 2708.17419,178.667495 2703.8025,179.5825 C2699.43081,180.497505 2695.41502,182.022489 2691.755,184.1575 C2688.09498,186.292511 2685.14668,189.088316 2682.91,192.545 C2680.67332,196.001684 2679.555,200.271641 2679.555,205.355 C2679.555,209.625021 2680.62249,213.234152 2682.7575,216.1825 C2684.89251,219.130848 2687.58665,221.621657 2690.84,223.655 C2694.09335,225.688344 2697.65165,227.365827 2701.515,228.6875 C2705.37835,230.009173 2708.93665,231.076663 2712.19,231.89 L2737.81,237.685 C2743.30003,238.498337 2748.73914,239.972489 2754.1275,242.1075 C2759.51586,244.242511 2764.29415,247.038316 2768.4625,250.495 C2772.63085,253.951684 2776.03665,258.221641 2778.68,263.305 C2781.32335,268.388359 2782.645,274.386632 2782.645,281.3 C2782.645,289.840043 2780.71335,297.109137 2776.85,303.1075 C2772.98665,309.105863 2768.05586,313.985815 2762.0575,317.7475 C2756.05914,321.509185 2749.29837,324.203325 2741.775,325.83 C2734.25163,327.456675 2726.83004,328.27 2719.51,328.27 C2701.00657,328.27 2686.01089,323.898377 2674.5225,315.155 C2663.03411,306.411623 2656.47667,292.381763 2654.85,273.065 L2674.065,273.065 C2674.87834,286.078398 2679.60579,295.889134 2688.2475,302.4975 C2696.88921,309.105866 2707.61494,312.41 2720.425,312.41 C2725.10169,312.41 2729.93081,311.901672 2734.9125,310.885 C2739.89419,309.868328 2744.51998,308.140012 2748.79,305.7 C2753.06002,303.259988 2756.56749,300.159185 2759.3125,296.3975 C2762.05751,292.635815 2763.43,288.010027 2763.43,282.52 C2763.43,277.84331 2762.46418,273.929182 2760.5325,270.7775 C2758.60082,267.625818 2756.00835,264.982511 2752.755,262.8475 C2749.50165,260.712489 2745.79085,258.93334 2741.6225,257.51 C2737.45415,256.08666 2733.23502,254.866672 2728.965,253.85 L2704.26,248.36 C2697.95664,246.733325 2692.16169,244.852511 2686.875,242.7175 C2681.58831,240.582489 2676.96252,237.939182 2672.9975,234.7875 C2669.03248,231.635818 2665.93168,227.772523 2663.695,223.1975 C2661.45832,218.622477 2660.34,212.980034 2660.34,206.27 C2660.34,198.33996 2662.11915,191.528362 2665.6775,185.835 C2669.23585,180.141638 2673.86164,175.566684 2679.555,172.11 C2685.24836,168.653316 2691.60246,166.111675 2698.6175,164.485 C2705.63254,162.858325 2712.59663,162.045 2719.51,162.045 C2727.44004,162.045 2734.8108,163.061657 2741.6225,165.095 C2748.4342,167.128344 2754.43247,170.279979 2759.6175,174.55 C2764.80253,178.820021 2768.91998,184.106635 2771.97,190.41 C2775.02002,196.713365 2776.74833,204.134957 2777.155,212.675 L2757.94,212.675 Z\" />\n        </g>\n    </svg>\n  );\n};\n\nexport default Logo;\n","import React from 'react';\nimport uuidv4 from 'uuid/v4';\nimport styled from 'styled-components';\nimport _map from 'lodash/map';\nimport Logo from '../Logo';\n\nconst DEFAULT_SCOPE = 'reporting';\n\nconst authState = uuidv4();\n\nconst createParamString = params => _map(params, (v, k) => `${k}=${v}`).join('&');\n\nconst loginParams = createParamString({\n  response_type: 'code',\n  state: authState,\n  scope: DEFAULT_SCOPE,\n  ttl: 1209600,\n  client_id: process.env.REACT_APP_CLIENT_ID,\n  redirect_uri: `${process.env.REACT_APP_URL}/authorize/mm/callback`,\n});\n\nconst loginUrl = `${process.env.REACT_APP_LOGIN_URL}?${loginParams}`;\n\nconst Centered = styled.div`\n  text-align: center;\n  padding-top: 200px;\n`;\n\nconst LoginButton = styled.a`\n  border-radius: 5px;\n  display: inline-block;\n  padding: 15px 20px;\n  text-decoration: none;\n  color: #000;\n  border: solid 1px #eee;\n\n  &:hover {\n    background-color: #eee;\n  }\n`;\n\nconst LogoContainer = styled.div`\n  display: block;\n  margin-bottom: 50px;\n`;\n\nconst Login = ({ location }) => {\n  const loadError = location && location.state && location.state.loadError;\n\n  return (\n    <Centered>\n      { loadError && (<div>{ loadError }</div>) }\n      <LogoContainer>\n        <Logo width=\"400px\" />\n      </LogoContainer>\n      <LoginButton href={loginUrl}>Login with MachineMetrics</LoginButton>\n    </Centered>\n  );\n};\n\nexport default Login;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nconst Done = ({ loadError }) => {\n  return loadError ? (\n    <Redirect to={{\n      pathname: '/login',\n      state: { loadError: loadError },\n      }}\n    />\n  ) : (\n    <Redirect to=\"/\" />\n  );\n};\n\nexport default Done;\n","import React, { useState } from 'react';\nimport { useAsyncEffect } from '../../utils/hooks';\nimport qs from 'query-string';\nimport Authorized from './Authorized';\nimport Message from '../Message';\nimport { rawRequest, setAccessToken } from '../../utils/request';\n\nconst Authorize = (props) => {\n  const [loading, setLoading] = useState(true);\n  const [loadError, setLoadError] = useState(null);\n\n  useAsyncEffect(async (abortSignal) => {\n    const code = qs.parse(window.location.search).code;\n\n    const params = {\n      grant_type: 'authorization_code',\n      client_id: process.env.REACT_APP_CLIENT_ID,\n      client_secret: process.env.REACT_APP_CLIENT_SECRET,\n      code,\n      redirect_uri: `${process.env.REACT_APP_URL}/authorize/mm/callback`,\n    };\n\n    try {\n      const response = await rawRequest(\n        `${process.env.REACT_APP_LOGIN_URL}/oauth/token`,\n        {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8',\n          },\n          body: new URLSearchParams(params),\n          signal: abortSignal,\n        }\n      );\n      setAccessToken(response.access_token);\n    } catch (e) {\n      console.log(e);\n      setLoadError(`Login Failed. Try again.`);\n    }\n\n    setLoading(false);\n  }, []);\n\n  return loading ? (\n    <Message>Authorizing...</Message>\n  ) : (\n    <Authorized loadError={loadError} />\n  );\n};\n\nexport default Authorize;\n","const DataMap = {\n  utilizationRate: {\n    title: 'Utilization',\n    transform: rate => (rate * 100).toFixed(1),\n    unit: '%',\n  },\n  totalParts: {\n    title: 'Total Parts',\n  },\n  rejectedParts: {\n    title: 'Rejected Parts',\n  },\n  oee: {\n    title: 'OEE',\n    transform: rate => (rate * 100).toFixed(1),\n    unit: '%',\n  },\n  availability: {\n    title: 'Availability',\n    transform: rate => (rate * 100).toFixed(1),\n    unit: '%',\n  },\n  timeInCut: {\n    title: 'In Cut Hours',\n    transform: ms => (ms / 1000 / 60 / 60).toFixed(1),\n    unit: 'hrs',\n  },\n  downtimeMs: {\n    title: 'Downtime',\n    transform: ms => (ms / 1000 / 60 / 60).toFixed(1),\n    unit: 'hrs',\n  }\n};\n\nexport const getInfo = (key) => {\n  const info = DataMap[key] || {};\n  return {\n    title: info.title || key,\n    transform: info.transform || (val => val),\n    unit: info.unit || '',\n  };\n};\n\nexport default DataMap;\n","import React from 'react';\nimport map from 'lodash/map';\nimport styled from 'styled-components';\nimport { getInfo } from './DataMap';\n\nconst BorderColor = '#ccc';\nconst FontColor = '#333';\n\nconst Row = styled.div`\n  color: ${FontColor};\n  padding: 10px;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n\nconst Cell = styled.div`\n  border-radius: 5px;\n  display: flex;\n  flex-direction: column;\n  border: solid 1px ${BorderColor};\n`;\n\nconst Title = styled.h1`\n  margin: 0;\n  padding: 5px 10px;\n  border-bottom: solid 1px ${BorderColor};\n  text-align: center;\n`;\n\nconst Body = styled.div`\n  padding: 30px 20px;\n  text-align: center;\n  font-size: 30px;\n`;\n\nconst ProductionAggregate = ({ data, loading }) => {\n  return (\n    <>\n      {\n        data && !loading &&\n        <Row>\n          {\n            map(data.aggregate, (value, key) => {\n              const info = getInfo(key);\n              return <Cell key={key}>\n                <Title>{info.title}</Title>\n                <Body>{info.transform(value)}{info.unit}</Body>\n              </Cell>;\n            })\n          }\n        </Row>\n      }\n    </>\n  );\n};\n\nexport default ProductionAggregate;\n","import React from 'react';\nimport ReactEcharts from 'echarts-for-react';\nimport moment from 'moment-timezone';\nimport { getInfo } from './DataMap';\nimport styled from 'styled-components';\n\nconst BorderColor = '#ccc';\n\nconst Panel = styled.div`\n  padding: 0;\n  margin: 20px 10px 45px 10px;\n  border-radius: 5px;\n  border: solid 1px ${BorderColor};\n`;\n\nconst Title = styled.h1`\n  margin: 0;\n  padding: 5px 10px;\n  font-size: 20px;\n  border-bottom: solid 1px ${BorderColor};\n`;\n\nconst Body = styled.div`\n  padding: 0;\n  text-align: center;\n  font-size: 30px;\n`;\n\nconst ProductionGraph = ({ data, loading, metric, graphType = 'line' }) => {\n  const info = getInfo(metric);\n\n  const option = {\n    animation: false,\n    xAxis: {\n      type: 'category',\n      data:\n        data && data.items\n          ? data.items.map(item => moment.utc(item.day).format('MMM D'))\n          : [],\n      axisLabel: {\n        interval: 0,\n        rotate: 45,\n      },\n    },\n    yAxis: {\n      type: 'value',\n    },\n    series: [\n      {\n        data:\n          data && data.items\n            ? data.items.map(item => {\n              return info.transform(item[metric]);\n            })\n            : [],\n        type: graphType,\n      },\n    ],\n  };\n\n  return (\n    <>\n      {\n        data && !loading &&\n        <Panel>\n          <Title>{info.title}</Title>\n          <Body>\n            <ReactEcharts option={option} />\n          </Body>\n        </Panel>\n      }\n    </>\n  );\n};\n\nexport default ProductionGraph;\n","import React from 'react';\nimport moment from 'moment-timezone';\nimport { useProductionQuery } from '../../utils/hooks';\nimport Message from '../Message';\nimport styled from 'styled-components';\nimport ProductionAggregate from './ProductionAggregate';\nimport ProductionGraph from './ProductionGraph';\n\nconst MINUTE = 60 * 1000;\n\nconst Footer = styled.div`\n  position: fixed;\n  bottom: 0;\n  right: 0;\n  padding: 5px 15px;\n  font-size: 12px;\n  background-color: #eee;\n  margin: 10px;\n  border-radius: 20px;\n`;\n\nconst Production = () => {\n  const start = moment.utc().startOf('day').subtract(30, 'days');\n  const end = moment.utc().endOf('day');\n\n  const query = `{\n    \"start\": \"${start.format()}\",\n    \"end\": \"${end.format()}\",\n    \"data\": [{\n      \"metric\": \"utilizationRate\"\n    },{\n      \"metric\":\"totalParts\"\n    },{\n      \"metric\": \"rejectedParts\"\n    },{\n      \"metric\": \"oee\"\n    },{\n      \"metric\": \"availability\"\n    },{\n      \"metric\": \"timeInCut\"\n    }],\n    \"groupBy\": [{\n      \"group\": \"day\"\n    }],\n    \"flatten\": true\n  }`;\n\n  const { loading, error, data } = useProductionQuery(query, 5 * MINUTE);\n\n  return (\n    <div>\n      {loading && <Message>Loading...</Message>}\n      <ProductionAggregate data={data} loading={loading} />\n      <ProductionGraph data={data} metric={'utilizationRate'} loading={loading} />\n      <ProductionGraph data={data} metric={'totalParts'} graphType={'bar'} loading={loading} />\n      <ProductionGraph data={data} metric={'rejectedParts'} graphType={'bar'} loading={loading} />\n      <ProductionGraph data={data} metric={'oee'} graphType={'line'} loading={loading} />\n      <ProductionGraph data={data} metric={'availability'} graphType={'line'} loading={loading} />\n      <ProductionGraph data={data} metric={'timeInCut'} graphType={'line'} loading={loading} />\n      {error && (\n        <Message>\n          An error occurred:\n          <br />\"{error.message}\"\n        </Message>\n      )}\n      <Footer>Refreshes every 5 minutes</Footer>\n    </div>\n  );\n};\n\nexport default Production;\n","import React from 'react';\nimport Message from './Message';\n\nconst NotFound = () => {\n  return (\n    <Message>Not Found</Message>\n  );\n};\n\nexport default NotFound;\n","import React, { useState, useEffect } from 'react';\nimport moment from 'moment-timezone';\nimport _ from 'lodash';\nimport { useDowntimeQuery } from '../../utils/hooks';\nimport Message from '../Message';\nimport styled from 'styled-components';\nimport ProductionGraph from '../Production/ProductionGraph';\n\nconst Footer = styled.div`\n  position: fixed;\n  bottom: 0;\n  right: 0;\n  padding: 5px 15px;\n  font-size: 12px;\n  background-color: #eee;\n  margin: 10px;\n  border-radius: 20px;\n`;\n\nconst Downtime = () => {\n  const start = moment.utc().startOf('day').subtract(30, 'days');\n  const end = moment.utc().endOf('day');\n\n  const query = `{\n    \"start\": \"${start.format()}\",\n    \"end\": \"${end.format()}\",\n    \"data\": [{\n      \"metric\": \"utilizationRate\"\n    },{\n      \"metric\":\"totalParts\"\n    },{\n      \"metric\": \"rejectedParts\"\n    },{\n      \"metric\": \"oee\"\n    },{\n      \"metric\": \"availability\"\n    },{\n      \"metric\": \"timeInCut\"\n    }],\n    \"groupBy\": [{\n      \"group\": \"day\"\n    }, {\n      \"group\": \"reason\"\n    }],\n    \"flatten\": true\n  }`;\n\n  const { loading, error, data } = useDowntimeQuery(query);\n  const [ filteredData, setFilteredData ] = useState();\n  const [ reasons, setReasons ] = useState([]);\n  const [ selectedReason, setSelectedReason ] = useState('all');\n\n  useEffect(() => {\n    if (!data || _.isEmpty(data.items)) {\n      return setFilteredData([]);\n    }\n\n    const reasons = _(data.items)\n      .map('reason')\n      .uniq()\n      .value();\n\n    const days = _(data.items)\n      .groupBy('day')\n      .mapValues((rows) => {\n        const modifiedReasons = _.map(rows, (row) => {\n          const downtimeMs = (\n            selectedReason === 'all' ||\n            (selectedReason === 'categorized' && row.reason !== 'Uncategorized') ||\n            selectedReason === row.reason) ?\n            row.downtimeMs :\n            0;\n\n          return {\n            ...row,\n            downtimeMs: downtimeMs,\n          };\n        });\n\n        return {\n          downtimeMs: _.sumBy(modifiedReasons, 'downtimeMs'),\n          day: _.first(modifiedReasons).day,\n        };\n      })\n      .values()\n      .value();\n\n    setReasons(reasons);\n    setFilteredData({ items: days });\n  }, [data, selectedReason]);\n\n  const handleChange = (event) => {\n    setSelectedReason(event.target.value);\n  }\n\n  return (\n    <div>\n      {loading && <Message>Loading...</Message>}\n      <select onChange={handleChange}>\n        <option value=\"all\">All Downtime</option>\n        <option value=\"categorized\">All Categorized</option>\n        {reasons.map((reason) => {\n          return <option key={reason} value={reason}>{reason}</option>;\n        })}\n      </select>\n      <ProductionGraph data={filteredData} graphType=\"bar\" metric={'downtimeMs'} loading={loading} />\n      {error && (\n        <Message>\n          An error occurred:\n          <br />\"{error.message}\"\n        </Message>\n      )}\n      <Footer>Data is up to 4 hours behind realtime</Footer>\n    </div>\n  );\n};\n\nexport default Downtime;\n","import React, { useEffect, useState } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport moment from 'moment-timezone';\n\nfunction median(values){\n    if(values.length ===0) return 0;\n  \n    values.sort(function(a,b){\n      return a-b;\n    });\n  \n    var half = Math.floor(values.length / 2);\n  \n    if (values.length % 2)\n      return values[half];\n  \n    return (values[half - 1] + values[half]) / 2.0;\n  }\n\nconst PartCount = ({ machineRef, partMetric, start, end }) => {\n    const query = gql`\n    query PartCount($machineRef: Int!, $partMetric: String!, $start: timestamp!, $end: timestamp!) {\n        counts(args: {machineRef: $machineRef, metricKey: $partMetric, windowStart: $start, windowEnd: $end}, order_by: {eventTime: asc}) {\n              value\n              eventTime\n            }\n          }\n    `;\n\n    const { loading, error, data } = useQuery(query, {\n        variables: {\n            machineRef,\n            partMetric,\n            start,\n            end\n        },\n        skip: !partMetric,\n    });\n\n    const [medianCycle, setMedianCycle] = useState(0);\n    useEffect(() => {\n        if (data && data.counts && data.counts.length > 1){\n            const newArr = [];\n            for (let i = 1; i < data.counts.length; i++){\n                newArr.push(moment(data.counts[i].eventTime).diff(moment(data.counts[i-1].eventTime)));\n            };\n            setMedianCycle(median(newArr));\n        }\n    }, [data, machineRef]);\n\n    return (\n        <>\n            { loading && ( <><td>Loading...</td><td></td></> )}\n            { data && data.counts && (\n            <>\n                <td>{data.counts.length}</td><td>{(moment.duration(medianCycle).minutes() > 0) ? moment.duration(medianCycle).minutes() + 'm' : ''} {moment.duration(medianCycle).seconds()}s</td>\n            </> )}\n            { error && (\n                <>\n                <td>{error.message}</td><td></td>\n                </>\n            )}\n        </>\n        );\n};\n\nexport default PartCount;","import React, { useEffect, useState } from 'react';\nimport StateBar from '../StateBar';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport moment from 'moment-timezone';\nimport styled from 'styled-components';\n\nconst DivContainer = styled.div`\n  width: 195px;\n  height: 50%;\n`;\n\nconst DivLeft = styled.div`\n  float: left;\n  width: 45px;\n`;\n\nconst DivRight = styled.div`\n  width: 150px;\n  float: right;\n`;\n\nconst colorMapping = {\n    'ACTIVE': '#53D73F',\n    'READY': '#428bca',\n    'UNAVAILABLE': 'gray',\n    'INTERRUPTED': '#428bca',\n    'PROGRAM_STOPPED': '#428bca',\n    'OPTIONAL_STOP': '#428bca',\n    'FEED_HOLD': '#EB506B'\n};\n\nmoment.tz.setDefault('UTC');\n\nconst ExecutionBar = ({ machineRef, start, end }) => {\n\n    const query = gql`\n    query GetStates($machineRef: Int!, $start: timestamp!, $end: timestamp!) {\n        stateIntervals(args: {machineRef: $machineRef, metricKey: \"MasterExecution\", windowStart: $start, windowEnd: $end}) {\n            value\n            start\n            end\n        }\n    }\n    `;\n\n    const { loading, error, data } = useQuery(query, \n        {\n            variables: {\n                machineRef,\n                start: start,\n                end: end\n            },\n            skip: !machineRef\n        }\n    );\n\n    const [points, setPoints] = useState([]);\n    const [utilization, setUtilization] = useState();\n    useEffect(() => {\n        let totalInCycle = 0;\n        const events = data ? data.stateIntervals : [];\n        const pts = events.map((event,i) => {\n            let newStart = (i === 0 && moment(event.start).isBefore(start)) ? start : moment(event.start);\n            let newEnd = event.end ? moment(event.end) : end;\n            if (event.value === \"ACTIVE\") {\n                const cycleTime = (newEnd ? newEnd.diff(newStart) : moment().diff(newStart));\n                totalInCycle += cycleTime;\n            }\n            return {\n                start: newStart,\n                end: newEnd,\n                color: colorMapping[event.value]\n            }\n        });\n        setPoints(pts);\n        setUtilization(totalInCycle/(end ? moment(end).diff(start) : moment().diff(start)));\n    }, [data, machineRef, start, end]);\n\n    return (\n        <div>\n            { loading && 'Loading...' }\n            { data && data.stateIntervals && (\n            <DivContainer>\n                <DivLeft>{utilization && Math.round(utilization * 1000)/10}%</DivLeft>\n                <DivRight><StateBar data={points} min={moment(start)} max={end ? moment(end) : moment()}></StateBar></DivRight>\n            </DivContainer> )}\n            { error && (\n                <DivContainer>\n                {error.message}\n                </DivContainer>\n            )}\n        </div>\n        );\n}\n\nexport default ExecutionBar;","import React, { useEffect, useState } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport moment from 'moment-timezone';\nimport styled from 'styled-components';\nimport PartCount from './PartCount';\nimport ExecutionBar from './ExecutionBar';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst TableStyle = styled.div`\ntable {\n  border: 1px solid #FFFFFF;\n  width: 100%;\n  text-align: left;\n  vertical-align: bottom;\n  border-collapse: collapse;\n}\ntable td, table th {\n  border: 1px solid #FFFFFF;\n  padding: 3px 2px;\n}\ntable tbody td {\n  font-size: 13px;\n}\ntable tr:nth-child(even) {\n  background: #E0F5DD;\n}\ntable thead {\n  background: #09700B;\n  border-bottom: 5px solid #FFFFFF;\n}\ntable thead th {\n  font-size: 17px;\n  font-weight: bold;\n  color: #FFFFFF;\n  text-align: left;\n  border-left: 2px solid #FFFFFF;\n}\ntable thead th:first-child {\n  border-left: none;\n}\n\ntable tfoot {\n  font-size: 14px;\n  font-weight: bold;\n  color: #333333;\n  background: #D2F5E1;\n  border-top: 3px solid #444444;\n}\ntable tfoot td {\n  font-size: 14px;\n}`\n\nmoment.tz.setDefault('EDT');\n\nconst Machine = ({ machineRef, programKey, startDate, endDate, mergeRuns, showHeader, partRegEx }) => {\n    const queryGetPartMetric = gql`\n    query GetPartCountMetric($machineRef: Int!) {\n        Metric(where: {machineRef: {_eq: $machineRef}, type: {_eq: \"PartCount\"}}) {\n          category\n          key\n          metricRef\n          subtype\n        }\n      }\n    `;\n    const { data: dataPartMetric } = useQuery(queryGetPartMetric, {\n        variables: {\n            machineRef\n        },\n    });\n    const [partMetric, setPartMetric] = useState();\n    useEffect(() =>{\n        console.log('PartMetric', dataPartMetric);\n        if (dataPartMetric && dataPartMetric.Metric.length > 0) {\n            setPartMetric(dataPartMetric.Metric[0].key);\n        };\n    }, [dataPartMetric]);\n\n\n    const query = gql`\n    query Program_Comment($machineRef: Int!, $programKey: String!, $start: timestamp!, $end: timestamp!) {\n        stateIntervals(args: {machineRef: $machineRef, metricKey: $programKey, windowStart: $start, windowEnd: $end}, \n        order_by: {start: asc},\n        where: {_not: {value: {_eq: \"UNAVAILABLE\"}}}) {\n          value\n          start\n          end\n        }\n      }\n    `;\n    const { loading, error, data } = useQuery(query, {\n        variables: {\n            machineRef,\n            programKey,\n            start: startDate,\n            end: endDate,\n        }\n    });\n    const [points, setPoints] = useState([]);\n    // Logic here is if there is a program that's less than a minute (or unavailable for any timeframe), \n    // it's filtered out. After the filter if the program is adjoining, we merge them.\n    useEffect(() => {\n        const rxProgram = /\\ \\s*[^ (]*/;\n        if(data && data.stateIntervals && data.stateIntervals[0]){\n            console.log('data', data);\n            const newData = data.stateIntervals.filter((item) => (\n                (item.end ? moment(item.end).diff(moment(item.start),'minutes') > 1 : true)\n            )).map((item) => (\n                {\n                    start: item.start,\n                    end: item.end ? item.end : moment().endOf('day'),\n                    value: item.value,\n                    part: programKey === 'program_comment' ? item.value.match(partRegEx) == null ? null : item.value.match(partRegEx)[1] : item.value,\n                    program: programKey === 'program_comment' ? item.value.match(rxProgram) == null ? null : item.value.match(rxProgram)[0] : item.value\n                }\n            ));\n            const mergedData = [];\n            console.log('newData',newData);\n            if (mergeRuns){\n                for (let i = 0; i < newData.length; i++){\n                    if (i > 0 && (mergedData[mergedData.length-1].part ? mergedData[mergedData.length-1].part === newData[i].part : mergedData[mergedData.length-1].program === newData[i].program)) {\n                        mergedData[mergedData.length-1].end = newData[i].end;\n                        i++;\n                    } else {\n                        mergedData.push(newData[i]);\n                    }\n                }\n                console.log('mergedData', mergedData);\n                setPoints(mergedData);\n            } else {\n                setPoints(newData);\n            }\n        }\n    }, [data,mergeRuns,partRegEx]);\n\n    return (\n      <div>\n        { loading && <div>Loading</div> }\n        { points && points.length <= 0 && !loading && <div>No Program Headers</div> }\n        { !loading && points && points.length > 0 && \n            <TableStyle>\n              <div>\n                  <table>\n                      <thead>\n                      <tr>\n                          {showHeader ? <th>Program</th> : <></>}\n                          {programKey === 'program_comment' ? <th>Part</th>:<></>}\n                          <th>Run Time</th>\n                          <th>Duration</th>\n                          <th>Utilization</th>\n                          <th>Parts</th>\n                          <th>Median Cycle</th>\n                      </tr>\n                      </thead>\n                      <tbody>\n                      {points && points.length > 0 && points.map((item) => (\n                      <tr key={item.start}>\n                        {showHeader ? <td>{item.value}</td> : <></>}\n                        {programKey === 'program_comment' ? <td>{item.part ? item.part : item.program}</td>:<></>}\n                        <td>{moment(item.start).format('lll')} - {item.end ? moment(item.end).format('lll') : moment().format('lll')}</td>\n                        <td>{moment.duration((item.end ? moment(item.end) : moment()).diff(moment(item.start))).humanize()}</td>\n                        <td><ExecutionBar machineRef={machineRef} start={item.start} end={item.end} /></td>\n                        <PartCount machineRef={machineRef} partMetric={partMetric} start={item.start} end={item.end} />\n                      </tr>\n                      ))}\n                      </tbody>\n                  </table>\n              </div>\n          </TableStyle>\n        }\n      </div>\n    );\n};\n\nexport default Machine;","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport moment from 'moment-timezone';\nimport styled from 'styled-components';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport ProgramTable from './ProgramTable';\nimport { useDebounceState } from '../../utils/hooks';\n\nmoment.tz.setDefault('EDT');\n\nconst Machine = () => {\n    const { machineRef } = useParams();\n\n    const machineQuery = gql`\n    query MachineInfo($machineRef: Int!) {\n        Machine(where: {machineRef: {_eq: $machineRef}}) {\n            make\n            model\n            serialNumber\n            name\n            location\n          }\n    }\n    `;\n    const { loading: loadingMachine, error: errorMachine, data: dataMachine } = useQuery(machineQuery, {\n        variables: {\n            machineRef\n        }\n    });\n    const [programKey, setProgramKey] = useState('program_comment');\n    const [startDate, setStartDate] = useState(moment().subtract(30, 'days').startOf('day').toDate());\n    const [endDate, setEndDate] = useState(moment().endOf('day').toDate());\n    const [mergeRuns, setMergeRuns] = useState(true);\n    const [showHeader, setShowHeader] = useState(false);\n    const [partRegEx, setPartRegEx] = useDebounceState(/\\(PART#([^)]+)\\)/);\n\n    return (\n        <div>\n            {loadingMachine && <div>Loading</div>}\n            {errorMachine && <div>Error</div>}\n            {dataMachine && dataMachine.Machine.length && \n                <div>\n                    <h3>{dataMachine.Machine[0].name}</h3>\n                    <h4>{dataMachine.Machine[0].make} {dataMachine.Machine[0].model} </h4>\n                    <div>\n                        Program Key:\n                        <select onChange={e => setProgramKey(e.target.value)}>\n                            <option value=\"program_comment\">Header</option>\n                            <option value=\"program\">Program Name</option>\n                        </select>\n                        <div>\n                            Start Date:\n                            <DatePicker selected={startDate} onChange={date => setStartDate(date)} />\n                        </div>\n                        <div>\n                            End Date:\n                            <DatePicker selected={endDate} onChange={date => setEndDate(date)} />\n                        </div>\n                        {programKey === 'program_comment' &&\n                        <div>\n                            Show Header: \n                            <input type=\"checkbox\" checked={showHeader} onChange={e => setShowHeader(e.target.checked)} />\n                        </div>\n                        }\n                        {programKey === 'program_comment' && showHeader &&\n                        <div>\n                            Part RegEx: <input value={partRegEx} onChange={e => setPartRegEx(e.target.value)} />\n                        </div>\n                        }\n                        <div>\n                            Merge Program Runs: \n                            <input type=\"checkbox\" checked={mergeRuns} onChange={e => setMergeRuns(e.target.checked)} />\n                        </div>\n                    </div>\n                </div>\n            }\n            <ProgramTable \n                machineRef={machineRef} \n                mergeRuns={mergeRuns} \n                programKey={programKey}\n                startDate={startDate} \n                endDate={endDate}\n                showHeader={showHeader}\n                partRegEx={partRegEx}>\n            </ProgramTable>\n        </div>\n    );\n};\n\nexport default Machine;","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport PrivateRoute from './components/route/PrivateRoute';\nimport UnauthenticatedRoute from './components/route/UnauthenticatedRoute';\nimport Home from './components/Home';\nimport Private from './components/Private';\nimport NavBar from './components/NavBar';\nimport Machines from './components/Machines';\nimport Console from './components/Console';\nimport Diagnostics from './components/Diagnostics';\nimport DiagnosticsGraph from './components/Diagnostics/DiagnosticsGraph';\nimport Login from './components/auth/Login';\nimport Authorize from './components/auth/Authorize';\nimport Production from './components/Production';\nimport NotFound from './components/NotFound';\nimport Downtime from './components/Downtime';\nimport Machine from './components/Machine/Machine';\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Private>\n        <NavBar />\n      </Private>\n      <Switch>\n        <UnauthenticatedRoute\n          exact\n          path=\"/login\"\n          component={Login}\n        />\n        <UnauthenticatedRoute\n          exact\n          path=\"/authorize/mm/callback\"\n          component={Authorize}\n        />\n        <PrivateRoute\n          exact\n          path=\"/\"\n          component={Home}\n        />\n        <PrivateRoute\n          exact\n          path=\"/machines\"\n          component={Machines}\n        />\n        <PrivateRoute\n          exact\n          path=\"/machine/:machineRef\"\n          component={Machine}\n        />\n        <PrivateRoute\n          exact\n          path=\"/console\"\n          component={Console}\n        />\n        <PrivateRoute\n          exact\n          path=\"/production\"\n          component={Production}\n        />\n        <PrivateRoute\n          exact\n          path=\"/downtime\"\n          component={Downtime}\n        />\n        <PrivateRoute\n          exact\n          path=\"/diagnostics\"\n          component={Diagnostics}\n        />\n        <PrivateRoute\n          exact\n          path=\"/diagnostics/:machineRef/:key\"\n          component={DiagnosticsGraph}\n        />\n        <Route\n          component={NotFound}\n        />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ApolloProvider }from '@apollo/react-hooks';\nimport './index.css';\nimport App from './App';\nimport client from './client';\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  rootElement\n);\n","var map = {\n\t\"./Range.js\": 134,\n\t\"./file.js\": 176,\n\t\"./getASTNodeAtPosition.js\": 175,\n\t\"./index.js\": 54,\n\t\"./validateWithCustomRules.js\": 207\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 628;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 629;","var map = {\n\t\"./Range.js\": 134,\n\t\"./file.js\": 176,\n\t\"./getASTNodeAtPosition.js\": 175,\n\t\"./index.js\": 54,\n\t\"./validateWithCustomRules.js\": 207\n};\n\nfunction webpackAsyncContext(req) {\n\treturn Promise.resolve().then(function() {\n\t\tif(!__webpack_require__.o(map, req)) {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t}\n\n\t\tvar id = map[req];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 630;\nmodule.exports = webpackAsyncContext;","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 631;"],"sourceRoot":""}